// margin padding 原子化
@numberPointsSet1: 0, 2, 4, 6, 8, 10, 12, 14, 16, 20, 24, 32, 36, 40, 48, 52, 60,
  64, 80, 90, 92, 96, 100, 128, 180, 190, 200, 220, 240, 250, 260, 280, 290, 300,
  400, 500, 600;
.loopMarginPadding(@data, @i: 1) when (@i <= length(@data)) {
  @item: extract(@data, @i);

  .p-@{item} {
    padding: (1px * @item);
  }
  .p-t-@{item} {
    padding-top: (1px * @item);
  }
  .p-r-@{item} {
    padding-right: (1px * @item);
  }
  .p-b-@{item} {
    padding-bottom: (1px * @item);
  }
  .p-l-@{item} {
    padding-left: (1px * @item);
  }
  .p-tb-@{item} {
    padding-top: (1px * @item);
    padding-bottom: (1px * @item);
  }
  .p-lr-@{item} {
    padding-left: (1px * @item);
    padding-right: (1px * @item);
  }
  .m-@{item} {
    margin: (1px * @item);
  }
  .m-t-@{item} {
    margin-top: (1px * @item);
  }
  .m-r-@{item} {
    margin-right: (1px * @item);
  }
  .m-b-@{item} {
    margin-bottom: (1px * @item);
  }
  .m-l-@{item} {
    margin-left: (1px * @item);
  }
  .m-tb-@{item} {
    margin-top: (1px * @item);
    margin-bottom: (1px * @item);
  }
  .m-lr-@{item} {
    margin-left: (1px * @item);
    margin-right: (1px * @item);
  }
  .loopMarginPadding(@data, @i + 1); // 递归调用自身
}
.loopMarginPadding(@numberPointsSet1);
.m-l-auto {
  margin-left: auto;
}
.m-r-auto {
  margin-right: auto;
}
.m-lr-auto {
  margin-left: auto;
  margin-right: auto;
}

@numberPointsSet2: 2, 4, 6, 8, 10, 12, 14, 16, 20, 24, 32, 36, 48, 64;
.loopBorderRadius(@data, @i: 1) when (@i <= length(@data)) {
  @item: extract(@data, @i);

  .brr-@{item} {
    border-radius: (1px * @item);
  }
  .loopBorderRadius(@data, @i + 1);
}
.loopBorderRadius(@numberPointsSet2);

// 字重 font-weight
@fontWeightPoints: 300, 400, 500, 700, 900;
.loopFontWeight(@data, @i: 1) when(@i =< length(@data)) {
  @item: extract(@data, @i);
  .fw-@{item} {
    font-weight: @item;
  }
  .loopFontWeight(@data, (@i + 1));
}
.loopFontWeight(@fontWeightPoints);

// 字体大小 font-size
@fontSizePoints: 12, 14, 16, 18, 20, 24, 26, 28, 32, 36, 42, 48, 64, 72;
.loopFontSize(@data, @i: 1) when(@i =< length(@data)) {
  @item: extract(@data, @i);
  .fs-@{item} {
    font-size: (1px * @item);
  }
  .loopFontSize(@data, (@i + 1));
}
.loopFontSize(@fontSizePoints);

// 百分比宽度、高度
@widthPoints: 5, 10, 15, 20, 25, 30, 33, 66, 80, 90, 100;
.loopPercentageWidthHeight(@data, @i: 1) when(@i =< length(@data)) {
  @item: extract(@data, @i);
  .w-p@{item} {
    width: (1% * @item);
  }
  .h-p@{item} {
    height: (1% * @item);
  }
  .loopPercentageWidthHeight(@data, (@i + 1));
}
.loopPercentageWidthHeight(@widthPoints);
.w-ftct {
  width: fit-content;
}

.loopPixelWidthHeight(@data, @i: 1) when(@i =< length(@data)) {
  @item: extract(@data, @i);
  .w-@{item}px {
    width: (1px * @item);
  }
  .h-@{item}px {
    height: (1px * @item);
  }
  .loopPixelWidthHeight(@data, (@i + 1));
}
.loopPixelWidthHeight(@numberPointsSet1);

.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-noselect {
  user-select: none;
}
.to-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}

.cursor-ptr {
  cursor: pointer;
}
.cursor-default {
  cursor: default;
}

.pos-rel {
  position: relative;
}
.pos-abs {
  position: absolute;
}

.hidden {
  display: none;
}
