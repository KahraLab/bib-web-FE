/*
  margin padding 原子化
*/
@marginPaddingPoints: 2, 4, 6, 8, 10, 12, 16, 20, 24, 32, 64, 80, 100, 128, 200;
.loop(@data, @i: 1) when (@i <= length(@marginPaddingPoints)) {
  @item: extract(@data, @i);

  .p-@{item} {
    padding: (1px * @item);
  }
  .p-t-@{item} {
    padding-top: (1px * @item);
  }
  .p-r-@{item} {
    padding-right: (1px * @item);
  }
  .p-b-@{item} {
    padding-bottom: (1px * @item);
  }
  .p-l-@{item} {
    padding-left: (1px * @item);
  }
  .m-@{item} {
    margin: (1px * @item);
  }
  .m-t-@{item} {
    margin-top: (1px * @item);
  }
  .m-r-@{item} {
    margin-right: (1px * @item);
  }
  .m-b-@{item} {
    margin-bottom: (1px * @item);
  }
  .m-l-@{item} {
    margin-left: (1px * @item);
  }
  .loop(@marginPaddingPoints, @i + 1); // 递归调用自身
}

.loop(@marginPaddingPoints);
